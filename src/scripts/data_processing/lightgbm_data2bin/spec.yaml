$schema: http://azureml/sdk-2-0/CommandComponent.json
name: lightgbm_python_data2bin
version: 1.0.1
display_name: "Save LightGBM data to binary (Python API)"
type: CommandComponent
description: "Uses lightgbm.Dataset() construct and save_binary to save training/testing data in binary format."
is_deterministic: true

inputs:
  # Inputs
  train:
    type: AnyDirectory
    description: directory to the training data
    optional: false
  test:
    type: AnyDirectory
    description: directory to the testing data
    optional: false

  # Input Parameters
  header:
    type: Boolean
    optional: true
    description: "does data have a header, see https://lightgbm.readthedocs.io/en/latest/Parameters.html#header"
  label_column:
    type: String
    optional: true
    description: "specify label column, default 0, see https://lightgbm.readthedocs.io/en/latest/Parameters.html#label_column"
  group_column:
    type: String
    optional: true
    description: "specify group/query column, default '', see https://lightgbm.readthedocs.io/en/latest/Parameters.html#group_column"

  max_bin:
    type: Integer
    min: 1
    default: 255
    description: "https://lightgbm.readthedocs.io/en/latest/Parameters.html#max_bin"
  custom_params:
    type: String
    optional: true
    description: "any lgbm param provided as json dictionary"

  # generic benchmark parameters
  verbose:
    type: Boolean
    optional: true
  custom_properties:
    type: String
    description: additional custom tags for the job
    optional: true

outputs:
  output_train:
    type: AnyDirectory
  output_test:
    type: AnyDirectory

command: >-
  python data2bin.py
  --train {inputs.train}
  --test {inputs.test}
  --output_train {outputs.output_train}
  --output_test {outputs.output_test}
  [--header {inputs.header}]
  [--label_column {inputs.label_column}]
  [--group_column {inputs.group_column}]
  --max_bin {inputs.max_bin}
  [--custom_params {inputs.custom_params}]
  [--verbose {inputs.verbose}]
  [--custom_properties {inputs.custom_properties}]

environment:
  docker:
    image: mcr.microsoft.com/azureml/base:latest
  conda:
    conda_dependencies_file: conda_env.yml
  os: Linux
