# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Benchmark scripts gated build

on:
  push:
    branches: [ main ]
    paths-ignore:
    - 'docs/**'
  pull_request:
    branches: [ main ]
    paths-ignore:
    - 'docs/**'
  workflow_dispatch:
    inputs:
      name:
        description: 'Reason'
        required: false
        default: '...'

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
  
    - uses: fauguste/auto-cancellation-running-action@0.1.4
      # auto-cancellation-running-action
      with:
        githubToken: ${{ secrets.GITHUB_TOKEN }}
  
    - uses: actions/checkout@v2

    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Install dependencies
      run: |
        sudo apt-get install libopenmpi-dev
        python -m pip install --upgrade pip
        pip install flake8==3.9.1 pytest~=6.2 pytest-cov~=2.11
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Test with pytest
      run: |
        python -m pytest tests/ --junitxml=test-build-result.xml --cov=src/ --cov-report xml:coverage.xml

    - name: Publish test results
      uses: EnricoMi/publish-unit-test-result-action/composite@v1
      with:
        check_name: Unit Test Results for Build
        github_token: ${{ secrets.GITHUB_TOKEN }}
        files: test-build-result.xml

    - name: Code Coverage Summary Report
      uses: irongut/CodeCoverageSummary@v1.0.2
      # uses: joshjohanning/CodeCoverageSummary@v1.0.2
      with:
        filename: coverage.xml
        badge: true
        hide_complexity: true
        format: 'markdown'
        output: 'both'

    - name: Add Coverage PR Comment
      uses: marocchino/sticky-pull-request-comment@v2
      if: github.event_name == 'pull_request'
      with:
        recreate: true
        path: code-coverage-results.md
