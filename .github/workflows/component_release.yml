name: Publish components as release assets

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
  workflow_dispatch:
    inputs:
      name:
        description: 'Reason'
        required: false
        default: '...'

jobs:
  component_publish:
    name: Build and publish components
    environment: mlops
    runs-on: ubuntu-latest

    strategy:
      matrix:
        include:
          - file_path: src/scripts/training/lightgbm_python/spec.yaml
            component_name: "lightgbm.python.training"

    steps:  
    - uses: actions/checkout@v2

    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Install dependencies
      run: |
        sudo apt install zip

        # Uninstall any previously installed extensions: azure-cli-ml (the `az ml` commands), ml (the vNext extension)
        az extension remove -n ml; az extension remove -n azure-cli-ml

        # Install remote version of azure-cli-ml (which includes `az ml component` commands)
        # This might take several minutes depends on your network, thanks for your patience.
        # Install specific stable version (recommended)
        az extension add --source https://azuremlsdktestpypi.blob.core.windows.net/wheels/componentsdk/azure_cli_ml-0.9.5-py3-none-any.whl --pip-extra-index-urls https://azuremlsdktestpypi.azureedge.net/componentsdk/0.9.5 --yes --verbose

    - name: azure login
      uses: azure/login@v1
      with:
        creds: ${{secrets.AZURE_CREDS}}

    - name: Build ${{matrix.component_name}}
      run: |
        # use az ml extension to build component
        az ml component build --file ${{matrix.component_yaml_file_path}} --target dist/${{matrix.component_name}}/

        # compress as zip
        zip -r dist/${{matrix.component_name}}-v${GITHUB_REF#refs/tags/}.zip dist/${{matrix.component_name}}/

        # clean up
        rm -rf dist/${{matrix.component_name}}/

    - name: Upload ${{matrix.component_name}} as asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: dist/${{matrix.component_name}}-v${GITHUB_REF#refs/tags/}.zip
        asset_name: ${{matrix.component_name}}-v${GITHUB_REF#refs/tags/}.zip
        asset_content_type: application/zip
