# to execute, run from /pipelines/azureml/
# > python pipelines/lightgbm_training.py --config-dir ./conf --config-name experiments/lightgbm_training/cpu-custom run.submit=True

defaults:
  - aml: sample
  - compute: sample
  - modules: benchmark

# run parameters are command line arguments for running your experiment
run: # params for running pipeline
  experiment_name: "lightgbm-training-dev" # IMPORTANT
  regenerate_outputs: false
  continue_on_failure: false
  verbose: false
  submit: false
  resume: false
  canary: false
  silent: false
  wait: false

module_loader: # module loading params
  use_local: "*"
  force_default_module_version: null
  force_all_module_version: null
  local_steps_folder: "../../../../../src/scripts/"

### CUSTOM PARAMETERS ###

lightgbm_training:
  benchmark_name: "benchmark-dev"

  # name of the train/test dataset pairs to train on (can provide multiple as a list)
  tasks:
    - train_dataset: "data-synthetic-regression-100cols-100000samples-train"
      test_dataset: "data-synthetic-regression-100cols-10000samples-test"
      task_key: "synthetic-regression-100cols" # optional, user to register outputs

  # set of parameters to train on all tasks
  reference_training:
    # input parameters
    header: false
    label_column: "0"
    group_column: null

    # lightgbm training parameters
    objective: "regression"
    metric: "rmse"
    boosting: "gbdt"
    tree_learner: "data"
    num_iterations: 100
    num_leaves: 31
    min_data_in_leaf: 20
    learning_rate: 0.1
    max_bin: 255
    feature_fraction: 1.0
    #custom_params:
    #    deterministic: True

    # model registration
    # naming convention: "{register_model_prefix}-{task_key}-{num_iterations}trees-{num_leaves}leaves-{register_model_suffix}"
    register_model: True
    register_model_prefix: "model"
    register_model_suffix: "cpu-custom"

    # compute parameters
    #target: null # optional: force target for this training job
    device_type: "cpu"
    nodes: 1
    processes: 1
    override_docker: "dockers/lightgbm_cpu_mpi_custom.dockerfile" # relative to lightgbm_python folder
