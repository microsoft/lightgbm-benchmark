# to execute, run from /pipelines/azureml/
# > python pipelines/lightgbm_training.py --config-dir ./conf --config-name experiments/benchmarks/training-distributed run.submit=True

defaults:
  - aml: sample
  - compute: sample
  - modules: benchmark

# run parameters are command line arguments for running your experiment
run: # params for running pipeline
  experiment_name: "benchmark-lightgbm-training" # IMPORTANT
  regenerate_outputs: false
  continue_on_failure: true
  verbose: false
  submit: false
  resume: false
  canary: false
  silent: false
  wait: false

module_loader: # module loading params
  use_local: "*"
  force_default_module_version: null
  force_all_module_version: null
  local_steps_folder: "../../../../../src/scripts/"

### CUSTOM PARAMETERS ###

lightgbm_training:
  benchmark_name: "benchmark-distributed-1-8"

  # list all the train/test pairs to train on
  tasks:
    - train_dataset: "data-synthetic-regression-1000cols-100000samples-train"
      test_dataset: "data-synthetic-regression-1000cols-10000samples-test"
      task_key: "synthetic-regression-1000cols" # optional, user to register outputs

  # reference settings for the benchmark
  # all variants are defined as diffs of these parameters
  reference:
    # input parameters
    data:
      auto_partitioning: True # inserts partitioning to match expected number of partitions (if nodes*processes > 1)
      pre_convert_to_binary: False # inserts convertion of train/test data into binary to speed up training (not compatible with auto_partitioning yet)
      header: false
      label_column: "0"
      group_column: null

    # lightgbm training parameters
    training:
      objective: "regression"
      metric: "rmse"
      boosting: "gbdt"
      tree_learner: "data"
      num_iterations: 100
      num_leaves: 31
      min_data_in_leaf: 20
      learning_rate: 0.1
      max_bin: 255
      feature_fraction: 1.0

      # compute parameters
      device_type: "cpu"

      # you can add anything under custom_params, it will be sent as a dictionary
      # to the lightgbm training module to override its parameters (see lightgbm docs for list)
      custom_params:
          deterministic: True
          use_two_round_loading: True

    # compute parameters
    runtime:
      #target: null # optional: force target for this training job
      nodes: 1
      processes: 1

    # model registration
    # naming convention: "{register_model_prefix}-{task_key}-{num_iterations}trees-{num_leaves}leaves-{register_model_suffix}"
    output:
      register_model: False

  # variant settings override specific parameters of reference_training
  variants:
    - runtime:
        nodes: 2
    - runtime:
        nodes: 4
    - runtime:
        nodes: 8
